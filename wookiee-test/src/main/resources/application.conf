wookiee-system {
  services {
    # an internal service points to the class that is basically a single service and loads itself internally into the harness
    # If available it will be used instead of the service-path, so only use if you definitely only need single service
    # internal = "com.webtrends.server.?"
    # internal-config = "conf/application.conf"

    # This is the path to the services (defaults to "services")
    path = "services"
    # service health check timeout
    check-timeout = 5
    # Should each service utilize it's own classloader
    distinct-classloader = off
  }

  # port for the http server that serves request for health checks
  internal-http {
    port = 8008
    enabled = true
  }

  # All the components to be loaded into the harness
  # the component-path and lib-components will work together, so if you have a component in the component-path location
  # do not try and load that component through lib-components as it will then load it twice
  components {
    # This is the path to the location of the components (defaults to "components")
    # Should just contain the jar for the component
    component-path = "components"
    # This maps Jars to configuration in the config
    # generally you wouldn't use this as the components would mostly be the same name as the config
    component-mappings {
      #componentJarName = "componentName"
    }
    # A list of components that are simply libraries that should be loaded as components
    # the strings would just be names of the config
    lib-components = []
  }

  dispatch {
    # generally this should be enabled
    enabled = true
    default-nr-routees = 5
  }

  commands {
    # generally this should be enabled
    enabled = true
    default-nr-routees = 5
  }

  logging {
    # Should logging events be routed through a logging actor. By default this is off and we use a asynchronous appender
    # to allow for higher performance logging.
    use-actor = off
  }

  message-processor {
    # How often the MessageProcessor should share it's subscription information
    share-interval = 1s
    # When should MessageTopicProcessor instances be removed after there are no longer any subscribers for that topic
    trash-interval = 30s
    # The default send timeout
    default-send-timeout = 2s
  }

  # CIDR Rules
  cidr-rules {
    # This is a list of IP ranges to allow through. Can be empty.
    allow = ["127.0.0.1/30", "10.0.0.0/8"]
    # This is a list of IP ranges to specifically deny access. Can be empty.
    deny = []
  }


  akka {
    loggers = ["com.webtrends.harness.logging.LoggingActor"]
    loglevel = DEBUG
    log-config-on-start = off
    log-dead-letters = off
    log-dead-letters-during-shutdown = off
    stdout-loglevel = DEBUG

    # See the documentation here: http://doc.akka.io/docs/akka/2.2.0-RC1/general/configuration.html#akka-actor
    actor {
      debug {
        lifecycle = on
        receive = on
        autoreceive = on
      }
      serializers {
      }

      serialization-bindings {
        #"com.webtrends.communication.Message" = kryo
      }

      kryo {
        #FIX
        kryo-custom-serializer-init = "com.webtrends.communication.KryoInit"
      }
    }
  }
  # Specific configs for each component can go here to override default settings
  wookiee-audit {
    enabled = false
  }
  wookiee-cache {
    enabled = false
  }
  wookiee-cache-memcache {
    enabled = true
  }
  wookiee-cluster {
    enabled = false
  }
  wookiee-kafka {
    enabled = false
  }
  wookiee-metrics {
    enabled = false
  }
  wookiee-netty {
    enabled = false
  }
  wookiee-sift {
    enabled = false
  }
  wookiee-socko {
    enabled = false
  }
  wookiee-spray {
    enabled = false
  }
  wookiee-zookeeper {
    enabled = false
  }
}